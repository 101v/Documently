time;logger;level;message;exception
2011-10-26 22:13:08.7072;Raven.Database.Impl.DocumentCacher;Info;"MemoryCache Settings:
  PhysicalMemoryLimit = 99
  CacheMemoryLimit    = 3214934016
  PollingInterval     = 00:02:00";
2011-10-26 22:13:08.8852;Raven.Storage.Esent.TransactionalStorage;Info;"Esent Settings:
  MaxVerPages      = 32768
  CacheSizeMax     = 262144
  DatabasePageSize = 4096";
2011-10-26 22:13:10.0283;Raven.Database.DocumentDatabase;Debug;Delete a document with key: Raven/Backup/Status and etag ;
2011-10-26 22:13:10.0283;Raven.Storage.Esent.StorageActions.DocumentStorageActions;Debug;Document with key 'Raven/Backup/Status' was not found, and considered deleted;
2011-10-26 22:13:15.0386;Raven.Storage.Esent.StorageActions.DocumentStorageActions;Debug;Document with key 'Raven/Replication/Destinations' was not found;
2011-10-26 22:13:15.0326;Raven.Database.Server.HttpServer;Debug;Request #   1: HEAD    -    50 ms - <default>  - 404 - /indexes/RavenCommitByDate;
2011-10-26 22:13:15.0686;Raven.Database.Server.HttpServer;Debug;Request #   2: GET     -    79 ms - <default>  - 404 - /docs/Raven/Replication/Destinations;
2011-10-26 22:13:17.4177;Raven.Database.Storage.IndexDefinitionStorage;Info;"New index RavenCommitByDate:
using Raven.Abstractions;
using Raven.Database.Linq;
using System.Linq;
using System.Collections.Generic;
using System.Collections;
using System;
using Raven.Database.Linq.PrivateExtensions;
using Lucene.Net.Documents;
using Raven.Database.Indexing;
public class Index_RavenCommitByDate : AbstractViewGenerator
{
	public Index_RavenCommitByDate()
	{
		this.ViewText = @""docs.RavenCommits
	.Select(c => new {CommitStamp = c.CommitStamp})
"";
		this.ForEntityNames.Add(""RavenCommits"");
		this.AddMapDefinition(docs => docs.Where(__document => __document[""@metadata""][""Raven-Entity-Name""] == ""RavenCommits"").Select(c => new { CommitStamp = c.CommitStamp, __document_id = c.__document_id }));
		this.AddField(""CommitStamp"");
		this.AddField(""__document_id"");
	}
}

Compiled to:
using Raven.Abstractions;
using Raven.Database.Linq;
using System.Linq;
using System.Collections.Generic;
using System.Collections;
using System;
using Raven.Database.Linq.PrivateExtensions;
using Lucene.Net.Documents;
using Raven.Database.Indexing;
public class Index_RavenCommitByDate : AbstractViewGenerator
{
	public Index_RavenCommitByDate()
	{
		this.ViewText = @""docs.RavenCommits
	.Select(c => new {CommitStamp = c.CommitStamp})
"";
		this.ForEntityNames.Add(""RavenCommits"");
		this.AddMapDefinition(docs => docs.Where(__document => __document[""@metadata""][""Raven-Entity-Name""] == ""RavenCommits"").Select(c => new { CommitStamp = c.CommitStamp, __document_id = c.__document_id }));
		this.AddField(""CommitStamp"");
		this.AddField(""__document_id"");
	}
}
";
2011-10-26 22:13:17.5117;Raven.Database.Indexing.IndexStorage;Info;Creating index RavenCommitByDate with encoded name RavenCommitByDate;
2011-10-26 22:13:17.8197;Raven.Database.Indexing.Index.Indexing;Debug;Creating index for RavenCommitByDate;
2011-10-26 22:13:17.8937;Raven.Database.Server.HttpServer;Debug;Request #   3: PUT     - 2 518 ms - <default>  - 201 - /indexes/RavenCommitByDate;
2011-10-26 22:13:17.9207;Raven.Database.Server.HttpServer;Debug;Request #   4: HEAD    -     0 ms - <default>  - 404 - /indexes/RavenCommitByRevisionRange;
2011-10-26 22:13:18.1908;Raven.Database.Storage.IndexDefinitionStorage;Info;"New index RavenCommitByRevisionRange:
using Raven.Abstractions;
using Raven.Database.Linq;
using System.Linq;
using System.Collections.Generic;
using System.Collections;
using System;
using Raven.Database.Linq.PrivateExtensions;
using Lucene.Net.Documents;
using Raven.Database.Indexing;
public class Index_RavenCommitByRevisionRange : AbstractViewGenerator
{
	public Index_RavenCommitByRevisionRange()
	{
		this.ViewText = @""docs.RavenCommits
	.Select(c => new {StreamId = c.StreamId, StartingStreamRevision = c.StartingStreamRevision, StreamRevision = c.StreamRevision})
"";
		this.ForEntityNames.Add(""RavenCommits"");
		this.AddMapDefinition(docs => docs.Where(__document => __document[""@metadata""][""Raven-Entity-Name""] == ""RavenCommits"").Select(c => new { StreamId = c.StreamId, StartingStreamRevision = c.StartingStreamRevision, StreamRevision = c.StreamRevision, __document_id = c.__document_id }));
		this.AddField(""StreamId"");
		this.AddField(""StartingStreamRevision"");
		this.AddField(""StreamRevision"");
		this.AddField(""__document_id"");
	}
}

Compiled to:
using Raven.Abstractions;
using Raven.Database.Linq;
using System.Linq;
using System.Collections.Generic;
using System.Collections;
using System;
using Raven.Database.Linq.PrivateExtensions;
using Lucene.Net.Documents;
using Raven.Database.Indexing;
public class Index_RavenCommitByRevisionRange : AbstractViewGenerator
{
	public Index_RavenCommitByRevisionRange()
	{
		this.ViewText = @""docs.RavenCommits
	.Select(c => new {StreamId = c.StreamId, StartingStreamRevision = c.StartingStreamRevision, StreamRevision = c.StreamRevision})
"";
		this.ForEntityNames.Add(""RavenCommits"");
		this.AddMapDefinition(docs => docs.Where(__document => __document[""@metadata""][""Raven-Entity-Name""] == ""RavenCommits"").Select(c => new { StreamId = c.StreamId, StartingStreamRevision = c.StartingStreamRevision, StreamRevision = c.StreamRevision, __document_id = c.__document_id }));
		this.AddField(""StreamId"");
		this.AddField(""StartingStreamRevision"");
		this.AddField(""StreamRevision"");
		this.AddField(""__document_id"");
	}
}
";
2011-10-26 22:13:18.1908;Raven.Database.Indexing.IndexStorage;Info;Creating index RavenCommitByRevisionRange with encoded name RavenCommitByRevisionRange;
2011-10-26 22:13:18.2068;Raven.Database.Indexing.Index.Indexing;Debug;Creating index for RavenCommitByRevisionRange;
2011-10-26 22:13:18.2068;Raven.Database.Server.HttpServer;Debug;Request #   5: PUT     -   228 ms - <default>  - 201 - /indexes/RavenCommitByRevisionRange;
2011-10-26 22:13:18.2328;Raven.Database.Server.HttpServer;Debug;Request #   6: HEAD    -     0 ms - <default>  - 404 - /indexes/RavenCommitsByDispatched;
2011-10-26 22:13:18.4838;Raven.Database.Storage.IndexDefinitionStorage;Info;"New index RavenCommitsByDispatched:
using Raven.Abstractions;
using Raven.Database.Linq;
using System.Linq;
using System.Collections.Generic;
using System.Collections;
using System;
using Raven.Database.Linq.PrivateExtensions;
using Lucene.Net.Documents;
using Raven.Database.Indexing;
public class Index_RavenCommitsByDispatched : AbstractViewGenerator
{
	public Index_RavenCommitsByDispatched()
	{
		this.ViewText = @""docs.RavenCommits
	.Select(c => new {Dispatched = c.Dispatched})
"";
		this.ForEntityNames.Add(""RavenCommits"");
		this.AddMapDefinition(docs => docs.Where(__document => __document[""@metadata""][""Raven-Entity-Name""] == ""RavenCommits"").Select(c => new { Dispatched = c.Dispatched, __document_id = c.__document_id }));
		this.AddField(""Dispatched"");
		this.AddField(""__document_id"");
	}
}

Compiled to:
using Raven.Abstractions;
using Raven.Database.Linq;
using System.Linq;
using System.Collections.Generic;
using System.Collections;
using System;
using Raven.Database.Linq.PrivateExtensions;
using Lucene.Net.Documents;
using Raven.Database.Indexing;
public class Index_RavenCommitsByDispatched : AbstractViewGenerator
{
	public Index_RavenCommitsByDispatched()
	{
		this.ViewText = @""docs.RavenCommits
	.Select(c => new {Dispatched = c.Dispatched})
"";
		this.ForEntityNames.Add(""RavenCommits"");
		this.AddMapDefinition(docs => docs.Where(__document => __document[""@metadata""][""Raven-Entity-Name""] == ""RavenCommits"").Select(c => new { Dispatched = c.Dispatched, __document_id = c.__document_id }));
		this.AddField(""Dispatched"");
		this.AddField(""__document_id"");
	}
}
";
2011-10-26 22:13:18.4838;Raven.Database.Indexing.IndexStorage;Info;Creating index RavenCommitsByDispatched with encoded name RavenCommitsByDispatched;
2011-10-26 22:13:18.4838;Raven.Database.Indexing.Index.Indexing;Debug;Creating index for RavenCommitsByDispatched;
2011-10-26 22:13:18.4838;Raven.Database.Server.HttpServer;Debug;Request #   7: PUT     -   157 ms - <default>  - 201 - /indexes/RavenCommitsByDispatched;
2011-10-26 22:13:18.4838;Raven.Database.Server.HttpServer;Debug;Request #   8: HEAD    -     0 ms - <default>  - 404 - /indexes/RavenSnapshotByStreamIdAndRevision;
2011-10-26 22:13:18.6948;Raven.Database.Storage.IndexDefinitionStorage;Info;"New index RavenSnapshotByStreamIdAndRevision:
using Raven.Abstractions;
using Raven.Database.Linq;
using System.Linq;
using System.Collections.Generic;
using System.Collections;
using System;
using Raven.Database.Linq.PrivateExtensions;
using Lucene.Net.Documents;
using Raven.Database.Indexing;
public class Index_RavenSnapshotByStreamIdAndRevision : AbstractViewGenerator
{
	public Index_RavenSnapshotByStreamIdAndRevision()
	{
		this.ViewText = @""docs.RavenSnapshots
	.Select(s => new {StreamId = s.StreamId, StreamRevision = s.StreamRevision})
"";
		this.ForEntityNames.Add(""RavenSnapshots"");
		this.AddMapDefinition(docs => docs.Where(__document => __document[""@metadata""][""Raven-Entity-Name""] == ""RavenSnapshots"").Select(s => new { StreamId = s.StreamId, StreamRevision = s.StreamRevision, __document_id = s.__document_id }));
		this.AddField(""StreamId"");
		this.AddField(""StreamRevision"");
		this.AddField(""__document_id"");
	}
}

Compiled to:
using Raven.Abstractions;
using Raven.Database.Linq;
using System.Linq;
using System.Collections.Generic;
using System.Collections;
using System;
using Raven.Database.Linq.PrivateExtensions;
using Lucene.Net.Documents;
using Raven.Database.Indexing;
public class Index_RavenSnapshotByStreamIdAndRevision : AbstractViewGenerator
{
	public Index_RavenSnapshotByStreamIdAndRevision()
	{
		this.ViewText = @""docs.RavenSnapshots
	.Select(s => new {StreamId = s.StreamId, StreamRevision = s.StreamRevision})
"";
		this.ForEntityNames.Add(""RavenSnapshots"");
		this.AddMapDefinition(docs => docs.Where(__document => __document[""@metadata""][""Raven-Entity-Name""] == ""RavenSnapshots"").Select(s => new { StreamId = s.StreamId, StreamRevision = s.StreamRevision, __document_id = s.__document_id }));
		this.AddField(""StreamId"");
		this.AddField(""StreamRevision"");
		this.AddField(""__document_id"");
	}
}
";
2011-10-26 22:13:18.6948;Raven.Database.Indexing.IndexStorage;Info;Creating index RavenSnapshotByStreamIdAndRevision with encoded name RavenSnapshotByStreamIdAndRevision;
2011-10-26 22:13:18.6948;Raven.Database.Indexing.Index.Indexing;Debug;Creating index for RavenSnapshotByStreamIdAndRevision;
2011-10-26 22:13:18.6948;Raven.Database.Server.HttpServer;Debug;Request #   9: PUT     -   137 ms - <default>  - 201 - /indexes/RavenSnapshotByStreamIdAndRevision;
2011-10-26 22:13:18.7118;Raven.Database.Server.HttpServer;Debug;Request #  10: HEAD    -     0 ms - <default>  - 404 - /indexes/RavenStreamHeadBySnapshotAge;
2011-10-26 22:13:18.9418;Raven.Database.Storage.IndexDefinitionStorage;Info;"New index RavenStreamHeadBySnapshotAge:
using Raven.Abstractions;
using Raven.Database.Linq;
using System.Linq;
using System.Collections.Generic;
using System.Collections;
using System;
using Raven.Database.Linq.PrivateExtensions;
using Lucene.Net.Documents;
using Raven.Database.Indexing;
public class Index_RavenStreamHeadBySnapshotAge : AbstractViewGenerator
{
	public Index_RavenStreamHeadBySnapshotAge()
	{
		this.ViewText = @""docs.RavenStreamHeads
	.Select(s => new {SnapshotAge = s.HeadRevision - s.SnapshotRevision})
"";
		this.ForEntityNames.Add(""RavenStreamHeads"");
		this.AddMapDefinition(docs => docs.Where(__document => __document[""@metadata""][""Raven-Entity-Name""] == ""RavenStreamHeads"").Select(s => new { SnapshotAge = s.HeadRevision - s.SnapshotRevision, __document_id = s.__document_id }));
		this.AddField(""SnapshotAge"");
		this.AddField(""__document_id"");
	}
}

Compiled to:
using Raven.Abstractions;
using Raven.Database.Linq;
using System.Linq;
using System.Collections.Generic;
using System.Collections;
using System;
using Raven.Database.Linq.PrivateExtensions;
using Lucene.Net.Documents;
using Raven.Database.Indexing;
public class Index_RavenStreamHeadBySnapshotAge : AbstractViewGenerator
{
	public Index_RavenStreamHeadBySnapshotAge()
	{
		this.ViewText = @""docs.RavenStreamHeads
	.Select(s => new {SnapshotAge = s.HeadRevision - s.SnapshotRevision})
"";
		this.ForEntityNames.Add(""RavenStreamHeads"");
		this.AddMapDefinition(docs => docs.Where(__document => __document[""@metadata""][""Raven-Entity-Name""] == ""RavenStreamHeads"").Select(s => new { SnapshotAge = s.HeadRevision - s.SnapshotRevision, __document_id = s.__document_id }));
		this.AddField(""SnapshotAge"");
		this.AddField(""__document_id"");
	}
}
";
2011-10-26 22:13:18.9418;Raven.Database.Indexing.IndexStorage;Info;Creating index RavenStreamHeadBySnapshotAge with encoded name RavenStreamHeadBySnapshotAge;
2011-10-26 22:13:18.9418;Raven.Database.Indexing.Index.Indexing;Debug;Creating index for RavenStreamHeadBySnapshotAge;
2011-10-26 22:13:18.9418;Raven.Database.Server.HttpServer;Debug;Request #  11: PUT     -   162 ms - <default>  - 201 - /indexes/RavenStreamHeadBySnapshotAge;
2011-10-26 22:13:19.1858;Raven.Database.Indexing.Index.Querying;Debug;Issuing query on index RavenCommitsByDispatched for: ( *:* -Dispatched:true);
2011-10-26 22:13:19.4148;Raven.Database.Server.HttpServer;Debug;Request #  12: GET     -   335 ms - <default>  - 200 - /indexes/RavenCommitsByDispatched?query=(%2520*%253A*%2520-Dispatched%253Atrue)&start=0&pageSize=1024&aggregation=None;
2011-10-26 22:13:24.0911;Raven.Storage.Esent.StorageActions.DocumentStorageActions;Debug;Document with key 'Raven/Replication/Destinations' was not found;
2011-10-26 22:13:24.0911;Raven.Database.Server.HttpServer;Debug;Request #  13: GET     -     0 ms - <default>  - 404 - /docs/Raven/Replication/Destinations;
2011-10-26 22:13:24.4191;Raven.Database.Storage.IndexDefinitionStorage;Info;"New index Temp%2fCustomerListDtos:
using Raven.Abstractions;
using Raven.Database.Linq;
using System.Linq;
using System.Collections.Generic;
using System.Collections;
using System;
using Raven.Database.Linq.PrivateExtensions;
using Lucene.Net.Documents;
using Raven.Database.Indexing;
public class Index_Temp_2fCustomerListDtos : AbstractViewGenerator
{
	public Index_Temp_2fCustomerListDtos()
	{
		this.ViewText = @""from doc in docs.CustomerListDtos
select new {  }
"";
		this.ForEntityNames.Add(""CustomerListDtos"");
		this.AddMapDefinition(docs => from doc in docs
			where doc[""@metadata""][""Raven-Entity-Name""] == ""CustomerListDtos""
			select new { __document_id = doc.__document_id });
		this.AddField(""__document_id"");
		this.AddQueryParameterForMap(""__document_id"");
		this.AddQueryParameterForReduce(""__document_id"");
	}
}

Compiled to:
using Raven.Abstractions;
using Raven.Database.Linq;
using System.Linq;
using System.Collections.Generic;
using System.Collections;
using System;
using Raven.Database.Linq.PrivateExtensions;
using Lucene.Net.Documents;
using Raven.Database.Indexing;
public class Index_Temp_2fCustomerListDtos : AbstractViewGenerator
{
	public Index_Temp_2fCustomerListDtos()
	{
		this.ViewText = @""from doc in docs.CustomerListDtos
select new {  }
"";
		this.ForEntityNames.Add(""CustomerListDtos"");
		this.AddMapDefinition(docs => from doc in docs
			where doc[""@metadata""][""Raven-Entity-Name""] == ""CustomerListDtos""
			select new { __document_id = doc.__document_id });
		this.AddField(""__document_id"");
		this.AddQueryParameterForMap(""__document_id"");
		this.AddQueryParameterForReduce(""__document_id"");
	}
}
";
2011-10-26 22:13:24.4191;Raven.Database.Indexing.IndexStorage;Info;Creating index Temp/CustomerListDtos with encoded name Temp/CustomerListDtos;
2011-10-26 22:13:24.5221;Raven.Database.Indexing.Index.Indexing;Debug;Creating index for Temp/CustomerListDtos;
2011-10-26 22:13:24.5221;Raven.Database.Indexing.Index.Querying;Debug;Issuing query on index Temp/CustomerListDtos for all documents;
2011-10-26 22:13:24.5371;Raven.Database.Server.HttpServer;Debug;Request #  14: GET     -   393 ms - <default>  - 200 - /indexes/dynamic/CustomerListDtos?query=&start=0&pageSize=128&aggregation=None;
